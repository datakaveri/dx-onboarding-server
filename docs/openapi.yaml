openapi: 3.0.2
info:
  version: '1.0.1'
  title: Data Exchange Onboarding Server APIs
  license:
    name: Apache 2.0
  description: |
    # Introduction
    The Onboarding is DXs' (Data Exchange) metadata onboarding portal. 
    It enables *Providers* of datasources to describe them with DX based annotations
    to make discovery and consumption of data both automatable and semantically describable. 

    # Configurations
    - **Server**: 
      - In the doc, we display the server url to be https://example-cat.com with the hostname as example-cat.com
      - This could be configured according to the deployment
    - **Base path**:
      - Base path is the path on which API is served, relative to the host
      - It is the initial part of the API
      - The base path for [DX AAA Server](https://github.com/datakaveri/iudx-aaa-server) is set to `/auth/v1`
      - Currently, `/iudx/cat/v1` is being used as base path for all the DX Onboarding Server APIs
      - These value could be configured according to the deployment
    - **Request Samples**:
      - The `<token>` in the header of request sample could be replaced with respective token value that could be obtained from DX Auth Server
      - The `<payload>` in the request sample could be replaced with the payload given adjacent to the request sample
      - The payload contains `<some_item_id>`, `<provider_id>`, `<some_item_name>`, for which the appropriate values could be added 

     # API HTTP Responses
    Apart from the response codes specified in each API,
    the API server may respond with certain 4xx and 5xx error codes which are related to common API Gateway behaviours.
    The application should address them accordingly.
  contact:
    name: For support contact IUDX Team at
    email: support@iudx.org.in
    url: https://iudx.org.in/
servers:
  - url: 'https://example-cat.com/iudx/cat/v1'
    description: Production Instance
paths:
  /item:
    post:
      tags:
        - Entity
      description: |
        Insert an item into the catalogue where the item's body specifies the type of item and instance name. id and itemStatus are added by server. Items maybe subClasses of type [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depending on this, some properties maybe mandatory. The json schema for the different types can be found [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator). In the future, we will serve schemas from our own servers.
      operationId: create item
      parameters:
        - name: token
          in: header
          description: DX Auth token to process the request
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/exampleEntityOwner'
                - $ref: '#/components/schemas/exampleEntityCos'
                - $ref: '#/components/schemas/exampleEntityResourceServer'
                - $ref: '#/components/schemas/exampleEntityProvider'
                - $ref: '#/components/schemas/exampleEntityResourceGroup'
                - $ref: '#/components/schemas/exampleEntityResource'
      responses:
        '201':
          description: Successfully inserted
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/successCreateResponseWithObjects'
                  - $ref: '#/components/schemas/successResponseForRgOnboarding'
        '400':
          description: Invalid document
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/errorInvalidSchema'
                  - $ref: '#/components/schemas/errorInvalidLinks'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseWithObjects'
              examples:
                Unauthorized:
                  value:
                    type: 'urn:dx:cat:InvalidAuthorizationToken'
                    title: Token is invalid
                    detail: 'failed to decode/validate jwt token : Invalid format for JWT'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create item cURL
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/item/' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'

    put:
      tags:
        - Entity
      description: |
        Update an item where the body contains a fully valid item with id. Relationship links like
        provider, resourceGroup, resourceServer and "name" are not allowed to be updated. itemStatus is added by backend.
        Items maybe subClasses of type [IUDXEntity](https://voc.iudx.org.in/IUDXEntity). Depedning on this, some properties maybe mandatory.
        The json schema for the different types can be found [here](https://github.com/datakaveri/iudx-catalogue-server/tree/master/src/main/resources/iudx/catalogue/server/validator). In the future, we will serve schemas from our own servers.
        #### Non-updateable fields
        In case update of these fields is required, it is recommended to delete the item
        and re-upload it.
        1. iudx:Resource
           - id
           - provider
           - resourceGroup
           - resourceServer
           - name 
           - type (1st element in array non-modifiable)
           - itemStatus

        2. iudx:ResourceGroup
           - id
           - name
           - provider
           - type (1st element in array non-modifiable)
           - itemStatus

        3. iudx:ResourceServer
           - id
           - cos
           - owner
           - type (1st element in array non-modifiable)
           - itemStatus

        4. iudx:Provider
           - id
           - resourceServer
           - type (1st element in array non-modifiable)
           - itemStatus

        5. iudx:Cos
           - id
           - owner
           - name
           - type (1st element in array non-modifiable)
           - itemStatus
        
        6. iudx:Owner
           - id
           - name
           - type (1st element in array non-modifiable)
           - itemStatus
      operationId: update item
      parameters:
        - name: token
          in: header
          description: DX Auth token to process the request
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512

      requestBody:
        required: true
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/exampleEntityWIdOwner'
                - $ref: '#/components/schemas/exampleEntityWIdCos'
                - $ref: '#/components/schemas/exampleEntityWIdResourceServer'
                - $ref: '#/components/schemas/exampleEntityWIdProvider'
                - $ref: '#/components/schemas/exampleEntityWIdResourceGroup'
                - $ref: '#/components/schemas/exampleEntityWIdResource'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateItemResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/errorInvalidSchema'
                  - $ref: '#/components/schemas/errorInvalidLinks'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseWithObjects'
              examples:
                Unauthorized:
                  value:
                    type: 'urn:dx:cat:InvalidAuthorizationToken'
                    title: Token is invalid
                    detail: 'failed to decode/validate jwt token : Invalid format for JWT'
        '404':
          description: Document doesn't exist to update it
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/updateItemNotFound'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: update item cURL
          source: |
            curl --location --request PUT 'https://example-cat.com/iudx/cat/v1/item/' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'

    get:
      tags:
        - Entity
      description: Get an item given the id
      operationId: get item
      parameters:
        - name: id
          in: query
          description: ID of the DX Entity
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Found the item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successGetResponseWithObjects'
        '400':
          description: Invalid ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/invalidIdErrorResponse'
        '404':
          description: Didn't find the item.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForGetEntity'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: item by id
          source: |
            curl --location --request GET 'https://example-cat.com/iudx/cat/v1/item?id=uuid'
    delete:
      tags:
        - Entity
      description: Delete an item
      operationId: delete item
      parameters:
        - name: token
          in: header
          description: DX Auth token to process the request
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: ID of the DX Entity
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successDeleteResponseWithObjects'
              examples:
                Delete Success:
                  value:
                    type: 'urn:dx:cat:Success'
                    title: Success
                    detail: 'Item deleted Successfully'
                    results:
                      - id: uuid
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
        '404':
          description: Didn't find the item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseWithObjects'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: delete item
          source: |
            curl --location --request DELETE 'https://example-cat.com/iudx/cat/v1/item?id=uuid' \
            --header 'token: <token>'
  /internal/ui/instance:
    post:
      tags:
        - Mlayer Instance
      operationId: create instance
      parameters:
        - name: token
          in: header
          description: A valid DX Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
      requestBody:
        description: 'Create a new Instance using name, cover, icon, logo.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exampleInstance'
      responses:
        '201':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForCreatingInstance'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForCreatingInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create instance
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/internal/ui/instance' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'
    put:
      tags:
        - Mlayer Instance
      description: Update the instance of the middle layer
      operationId: update instance
      parameters:
        - name: token
          in: header
          description: Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: |
            `id` of the instance to be updated
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exampleInstance'
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForUpdatingInstance'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForCreatingInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: update instance
          source: |
            curl --location --request PUT 'https://example-cat.com/iudx/cat/v1/internal/ui/instance?instanceId=191e35e3-99c2-43a5-ba8d-811a756b08de' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'
    get:
      tags:
        - Mlayer Instance
      description: |
        Get list of all Instances
      operationId: get instance
      parameters:
        - name: id
          in: query
          description: |
            `id` of the instance to be fetched
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForGettingInstance'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: get instance
          source: |
            curl --location --request GET 'https://example-cat.com/iudx/cat/v1/internal/ui/instance'
    delete:
      tags:
        - Mlayer Instance
      description: delete an instance using id parameter
      operationId: delete instance
      parameters:
        - name: token
          in: header
          description: Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: |
            `id` of the Instance to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForDeletingInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: delete instance
          source: |
            curl --location --request DELETE 'https://example-cat.com/iudx/cat/v1/internal/ui/instance?instanceId=191e35e3-99c2-43a5-ba8d-811a756b08de' \
            --header 'token: <token>'
  /internal/ui/domain:
    post:
      tags:
        - Mlayer Domain
      description: |
        Create a new Data model Domain
      operationId: create domain
      parameters:
        - name: token
          in: header
          description: A valid DX Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
      requestBody:
        description: 'Create a new domain using name, label, icon, description.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exampleDomain'
      responses:
        '201':
          description: Successfully inserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForCreatingDomain'
        '400':
          description: Invalid document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForCreatingInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create domain
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/internal/ui/domain' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'
    put:
      tags:
        - Mlayer Domain
      description: Update the data model domain of the middle layer
      operationId: update domain
      parameters:
        - name: token
          in: header
          description: Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: |
            `id` of the data model domain, to be updated
          required: true
          schema:
            type: string
      requestBody:
        description: 'name, label, icon and description can be updated.'
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/exampleDomain'
      responses:
        '200':
          description: Successfully inserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForUpdatingDomain'
        '400':
          description: Invalid document
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForCreatingInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: update domain
          source: |
            curl --location --request PUT 'https://example-cat.com/iudx/cat/v1/internal/ui/domain?domainId=3d73067f-2855-4155-b918-14d621b7a576' \
            --header 'token: <token>' \
            --header 'Content-Type: application/json' \
            --data-raw '<payload>'
    get:
      tags:
        - Mlayer Domain
      description: |
        Get list of all Data-model Domains.
      operationId: get domain
      parameters:
        - name: id
          in: query
          description: |
            `id` of the data model domain, to be fetched
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForGettingDomain'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: get domain
          source: |
            curl --location --request GET 'https://example-cat.com/iudx/cat/v1/internal/ui/domain'
    delete:
      tags:
        - Mlayer Domain
      description: delete a data model domain
      operationId: delete domain
      parameters:
        - name: token
          in: header
          description: Authorization token
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: |
            `id` of the Domain to be deleted.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForDeletingDomain'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: delete domain
          source: |
            curl --location --request DELETE 'https://example-cat.com/iudx/cat/v1/internal/ui/domain?domainId=3d73067f-2855-4155-b918-14d621b7a576' \
            --header 'token: <token>'
  /instance:
    post:
      tags:
        - Administrator
      description: Create an DX instance
      operationId: create instance
      parameters:
        - name: token
          in: header
          description: DX Auth token to process the request
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9\/\@\.]*$'
            maxLength: 512
        - name: id
          in: query
          description: |
            `id` of the instance. In most cases this is a city name.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Successfully inserted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseCreateInstance'
              examples:
                Created instance successfully:
                  value:
                    type: "urn:dx:cat:Success"
                    results: {
                      "id": "Bengaluru",
                      "type": [
                        "iudx:Instance"
                      ],
                      "instance": "",
                      "_summary": ""
                    }
                    detail: "Success: Item created"
                    title: "Success"

        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForCreateInstance'
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
              examples:
                Unauthorized request:
                  value:
                    type: "urn:dx:cat:InvalidAuthorizationToken"
                    title: "Token is invalid"
                    detail: "Incorrect audience value in jwt"
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create instance
          source: |
            curl --location --request POST 'https://example-cat.com/iudx/cat/v1/instance?id=Bengaluru' \
            --header 'token: <token>' \
            --data-raw ''
  /list/instance:
    get:
      tags:
        - Administrator
      description: This API gets the list of instances from the DX Catalogue Server
      operationId: get instances
      responses:
        '200':
          description: Successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForGetInstance'
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: create instance
          source: |
            curl --location --request GET 'https://example-cat.com/iudx/cat/v1/list/instance'
    delete:
      tags:
        - Administrator
      description: Delete an DX instance
      operationId: delete instance
      parameters:
        - name: token
          in: header
          description: DX Auth token to process the request
          required: true
          schema:
            type: string
        - name: id
          in: query
          description: |
            id of the instance. In most cases this is a city name.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/successResponseForDeleteInstance'
              examples:
                Successfully deleted:
                  value:
                    type: "urn:dx:cat:Success"
                    title: "Success"
                    results: [
                      {
                        "id": "poone"
                      }
                    ]
                    detail: "Success: Item deleted successfully"
        '401':
          description: Unauthorized access
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/unAuthorizedAccess'
              examples:
                Unauthorized access:
                  value:
                    type: "urn:dx:cat:InvalidAuthorizationToken"
                    title: "Token is invalid"
                    detail: "Incorrect audience value in jwt"
        '404':
          description: Instance doesn't exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/errorResponseForDeleteInstance'
              examples:
                Item not found:
                  value:
                    type: "urn:dx:cat:ItemNotFound"
                    title: "Item is not found"
                    results: [
                      {
                        "id": "non-exisiting-id",
                        "detail": "Fail: Doc doesn't exist, can't delete"
                      }
                    ]
      servers:
        - url: 'https://example-cat.com/iudx/cat/v1'
          description: Production Instance
      x-codeSamples:
        - lang: cURL
          label: delete instance
          source: |
            curl --location --request DELETE 'https://example-cat.com/iudx/cat/v1/instance?id=Bengaluru' \
            --header 'token: <token>'
tags:
  - name: Entity
    description: |
      Manage catalogue entities and perform Create/Update/Read/Delete operations on them.
      These apis are intended to be used by DX(Data Exchange) Data *Providers*.
    x-displayName: Entity
  - name: Mlayer Instance
    description: |
      Catalogue middle layer specific APIs.  Instance refers to the name of the city/location.
    x-displayName: Mlayer Instance
  - name: Mlayer Domain
    description: |
      Catalogue middle layer specific APIs.  Catalogue has data-domain models that describes each of the domains.
    x-displayName: Mlayer Domain
  - name: Administrator
    description: |
      Catalogue administrator specific apis.
    x-displayName: Administrator
components:
  schemas:
    successCreateResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.
      required:
        - type
      x-examples:
        Example 1:
          type: 'urn:dx:cat:Success'
          title: Success
          totalHits: 10
          detail: 'Item Created Successfully'
          results:
            - id: uuid
              name: wifi-location
              type:
                - 'iudx:Resource'
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 10
        detail: 'Item Created Successfully'
        results:
          - id: uuid
            name: wifi-location
            type:
              - 'iudx:Resource'
    successGetResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.
      required:
        - type
      x-examples:
        Example 1:
          type: 'urn:dx:cat:Success'
          title: Success
          totalHits: 10
          detail: 'Item fetched Successfully'
          results:
            - id: uuid
              name: wifi-location
              type:
                - 'iudx:Resource'
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 10
        detail: 'Item fetched successfully'
        results:
          - id: uuid
            name: wifi-location
            type:
              - 'iudx:Resource'
    successDeleteResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.
      required:
        - type
      x-examples:
        Example 1:
          type: 'urn:dx:cat:Success'
          title: Success
          totalHits: 10
          detail: 'Item deleted Successfully'
          results:
            - id: uuid
              name: wifi-location
              type:
                - 'iudx:Resource'
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 10
        detail: 'Item deleted Successfully'
        results:
          - id: uuid
            name: wifi-location
            type:
              - 'iudx:Resource'
    successResponseForRgOnboarding:
      type: object
      title: Root Type for resource group onboarding
      description: Standard Response for all requests
      properties:
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.
      example:
        type: Success
        results:
          item_details:
            '@context': https://voc.iudx.org.in/
            type:
              - iudx:ResourceGroup
              - iudx:IssueReporting
            name: rg-for-test-suite
            description: ''
            tags:
              - example-tags
            provider: 05d3f01b-d2f1-36ac-ab09-36a7ae9d997c
            ownerUserId: b2c27f3f-2524-4a84-816e-91f9ab23f837
            cos: 35d8e0a3-3a33-3a11-908f-f06bd1f678db
            id: bc41c6e1-3c41-337f-8736-2027b8f61bc8
            itemStatus: ACTIVE
            itemCreatedAt: 2023-09-14T12:14:51+0530
            _summary: 'rg-for-test-suite example-tags  '
          adapter_details:
            username: b2c27f3f-2524-4a84-816e-91f9ab23f837
            apiKey: Use the apiKey returned on registration, if lost please use /resetPassword API
            id: bc41c6e1-3c41-337f-8736-2027b8f61bc8
            URL: databroker.iudx.io
            port: 24567
            vHost: IUDX

    errorResponseForGetEntity:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:ItemNotFound'
        title: error
        totalHits: 0
        results: [ ]
    exampleEntityWIdOwner:
      type: object
      title: owner entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        id:
          type: string
          format: uuid
      required:
        - id
    exampleEntityWIdCos:
      type: object
      title: cos entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        cosURL:
          type: string
        cosUI:
          type: string
      required:
        - type
        - name
        - description
        - cosURL
        - cosUI
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:COS'
        name: cos.cop.iudx.org.in
        description: COS Smart Kalyan-Dombivli Development Corporation Limited
        cosURL: kdmc.cop-nec.iudx.org.in
        cosUI: 'https://catalogue.kdmc.cop-nec.iudx.org.in/'
    exampleEntityWIdResourceServer:
      type: object
      title: resource server entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        cos:
          type: string
          format: uuid
        owner:
          type: string
          format: uuid
        resourceServerOrg:
          type: string
        resourceServerRegURL:
          type: string
        resourceAccessModalities:
          type: array
          items:
            type: object
        location:
          type: array
          items:
            type: string
      required:
        - '@context'
        - type
        - name
        - description
        - tags
        - cos
        - owner
        - resourceServerOrg
        - resourceAccessModalities
        - location
      x-examples:
        Example 1:
          '@context': 'https://voc.iudx.org.in/'
          type:
            - 'iudx:ResourceServer'
          name: Iudx ResourceServer
          description: Multi tenanted IUDX resource server
          tags:
            - IUDX
            - Resource
            - Server
            - Platform
          cos: 26d33603-c0bb-4ea0-85f8-4017020597ce
          owner: 37d33603-c0bb-4ea0-85f8-4017031686df
          resourceServerOrg:
            name: iudx
            additionalInfoURL: 'https://iudx.org.in'
            location:
              type: Place
              address: 'IISc, Bangalore'
              geometry:
                type: Point
                coordinates:
                  - 77.570423
                  - 13.013945
          resourceServerRegURL: example.iudx.io
          resourceAccessModalities:
            - protocol: http
              accessURL: rs
              type:
                - 'iudx:HTTPAccess'
            - protocol: amqps
              accessURL: databroker
              type:
                - 'iudx:StreamingAccess'
            - protocol: ftp
              accessURL: file
              type:
                - 'iudx:FileAccess'
          location:
            type: Place
            address: 'IISc, Bangalore'
            geometry:
              type: Point
              coordinates:
                - 77.570423
                - 13.013945
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:ResourceServer'
        name: Iudx ResourceServer
        description: Multi tenanted IUDX resource server
        tags:
          - IUDX
          - Resource
          - Server
          - Platform
        id: 3988525c-e506-3927-a80c-cf013bd87d69
        cos: 26d33603-c0bb-4ea0-85f8-4017020597ce
        owner: 37d33603-c0bb-4ea0-85f8-4017031686df
        resourceServerOrg:
          name: iudx
          additionalInfoURL: 'https://iudx.org.in'
          location:
            type: Place
            address: 'IISc, Bangalore'
            geometry:
              type: Point
              coordinates:
                - 77.570423
                - 13.013945
        resourceServerRegURL: example.iudx.io
        resourceAccessModalities:
          - protocol: http
            accessURL: rs
            type:
              - 'iudx:HTTPAccess'
          - protocol: amqps
            accessURL: databroker
            type:
              - 'iudx:StreamingAccess'
          - protocol: ftp
            accessURL: file
            type:
              - 'iudx:FileAccess'
        location:
          type: Place
          address: 'IISc, Bangalore'
          geometry:
            type: Point
            coordinates:
              - 77.570423
              - 13.013945
    exampleEntityWIdProvider:
      type: object
      title: provider entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        resourceServer:
          type: string
          format: uuid
        description:
          type: string
        providerUserId:
          type: string
          format: uuid
        providerOrg:
          type: string
      required:
        - type
        - name
        - resourceServer
        - description
        - providerUserId
        - providerOrg
      x-examples:
        Example 1:
          '@context': 'https://voc.iudx.org.in/'
          type:
            - 'iudx:Provider'
          name: IudxProvider
          resourceServer: '{{UUID}}'
          description: provider id for uuid test
          providerUserId: UUID
          providerOrg:
            name: Datakaveri
            additionalInfoURL: 'https://datakaveri.org'
            location:
              type: Place
              address: IIsc
              geometry:
                type: Point
                coordinates:
                  - 75.92
                  - 14.5
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:Provider'
        name: IudxProvider
        resourceServer: '{{UUID}}'
        description: provider id for uuid test
        providerUserId: UUID
        providerOrg:
          name: Datakaveri
          additionalInfoURL: 'https://datakaveri.org'
          location:
            type: Place
            address: IIsc
            geometry:
              type: Point
              coordinates:
                - 75.92
                - 14.5
    exampleEntityWIdResourceGroup:
      type: object
      title: resource group entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        provider:
          type: string
          format: uuid
      required:
        - type
        - name
        - description
        - tags
        - provider
      x-examples:
        Example 1:
          '@context': 'https://voc.iudx.org.in/'
          type:
            - 'iudx:ResourceGroup'
            - 'iudx:IssueReporting'
          name: agra-swachhata-apps
          description: 'Civic Issues like open defecation, garbage dumping, etc., reported in Agra city via Swachhata app. Publishes all the complaints/issues lodged on the current day, on a daily basis.'
          tags:
            - swachhata
            - complaints
            - reporting
            - issue
            - garbage dump
            - debris removal
            - open defecation
            - construction material
            - requests
          provider: '{{UUID}}'
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:ResourceGroup'
          - 'iudx:IssueReporting'
        name: agra-swachhata-apps
        description: 'Civic Issues like open defecation, garbage dumping, etc., reported in Agra city via Swachhata app. Publishes all the complaints/issues lodged on the current day, on a daily basis.'
        tags:
          - swachhata
          - complaints
          - reporting
          - issue
          - garbage dump
          - debris removal
          - open defecation
          - construction material
          - requests
        provider: '{{UUID}}'
    exampleEntityWIdResource:
      type: object
      title: resource entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        label:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        apdURL:
          type: string
        accessPolicy:
          type: string
        resourceServer:
          type: string
          format: uuid
        provider:
          type: string
          format: uuid
        resourceGroup:
          type: string
          format: uuid
      required:
        - type
        - name
        - label
        - description
        - tags
        - apdURL
        - accessPolicy
        - resourceServer
        - provider
        - resourceGroup
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:Resource'
          - 'iudx:PointOfInterest'
        name: wifi-location
        label: Wi-Fi Locations in Pimpri-Chinchwad City
        description: The physical coordinates of Wi-Fi system locations in Pimpri-Chinchwad city.
        tags:
          - Wi-Fi
          - Wi-Fi zone
          - hotspot
          - internet
          - Wi-Fi access
          - Wi-Fi location
          - wireless internet
          - internet access
        apdURL: rs.apd.iudx.org.in
        accessPolicy: SECURE
        resourceServer: '{{uuid}}'
        provider: '{uuid}}'
        resourceGroup: '{{uuid}}'
    updateItemResponse:
      type: object
      title: Response for update Item
      description: Success response for update Item with ID
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Item updated Successfully'
        results:
          id: uuid
          type: [ ]
          name: wifi-location
    errorInvalidSchema:
      type: object
      title: Response - invalid schema
      description: Invalid Schema response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      example:
        type: 'urn:dx:cat:InvalidSchema'
        title: Invalid Schema
        detail: Invalid Schema
        results: [ ]
    errorInvalidLinks:
      type: object
      title: Response  - invalid links
      description: Invalid Links response schema
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have been triggered
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      example:
        type: urn:dx:cat:LinkValidationFailed
        title: Link Validation Failed
        detail: Provider not found
    errorResponseWithObjects:
      type: object
      title: Root Type for standardResponse
      description: Standard Response for all requests
      properties:
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          description: A human readable title to the message response.
      required:
        - type
      example:
        totalHits: 10
        results:
          - { }
        type: <error urn>
        title: <error title
        detail: <error detail description>
    updateItemNotFound:
      type: object
      title: Document not found
      properties:
        type:
          type: string
          description: |
            Type of the response indicating if the query was successful or if any errors have been triggered.
        title:
          type: string
          description: A human readable title to the message response.\
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      description: Update Item Not Found
      example:
        type: urn:dx:cat:ItemNotFound
        title: Item is not found
        results:
          - id: eba4c1dc-8713-26d7-87e6-ec4608473bb4
            method: update
            title: failed
            detail: 'Fail: Doc doesn''t exist, can''t update'
    exampleEntityOwner:
      type: object
      title: owner entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
      required:
        - '@context'
        - type
        - name
        - description
    exampleEntityCos:
      type: object
      title: cos entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        cosURL:
          type: string
          description: url of the COS
        cosUI:
          type: string
          description: url of the user interface
        owner:
          type: string
          description: id of the owner item in catalogue
      required:
        - '@context'
        - type
        - name
        - description
        - cosURL
        - cosUI
        - owner
      x-examples:
        Example 1:
          '@context': 'https://voc.iudx.org.in/'
          type:
            - 'iudx:COS'
          name: cos.cop.iudx.org.in
          owner: <owner-id>
          description: COS Smart Kalyan-Dombivli Development Corporation Limited
          cosURL: kdmc.cop-nec.iudx.org.in
          cosUI: 'https://catalogue.kdmc.cop-nec.iudx.org.in/'
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:COS'
        name: cos.cop.iudx.org.in
        owner: 26d33603-c0bb-4ea0-85f8-4017020597ce
        description: COS Smart Kalyan-Dombivli Development Corporation Limited
        cosURL: kdmc.cop-nec.iudx.org.in
        cosUI: 'https://catalogue.kdmc.cop-nec.iudx.org.in/'
    exampleEntityResourceServer:
      type: object
      title: resource server entity
      description: payload for update item with ID
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        cos:
          type: string
          format: uuid
        owner:
          type: string
          format: uuid
        resourceServerOrg:
          type: string
        resourceServerRegURL:
          type: string
        resourceAccessModalities:
          type: array
          items:
            type: object
        location:
          type: array
          items:
            type: string
      required:
        - '@context'
        - type
        - name
        - description
        - tags
        - cos
        - owner
        - resourceServerOrg
        - resourceAccessModalities
        - location
      x-examples:
        Example 1:
          '@context': 'https://voc.iudx.org.in/'
          type:
            - 'iudx:ResourceServer'
          name: Iudx ResourceServer
          description: Multi tenanted IUDX resource server
          tags:
            - IUDX
            - Resource
            - Server
            - Platform
          cos: 26d33603-c0bb-4ea0-85f8-4017020597ce
          owner: 37d33603-c0bb-4ea0-85f8-4017031686df
          resourceServerOrg:
            name: iudx
            additionalInfoURL: 'https://iudx.org.in'
            location:
              type: Place
              address: 'IISc, Bangalore'
              geometry:
                type: Point
                coordinates:
                  - 77.570423
                  - 13.013945
          resourceServerRegURL: example.iudx.io
          resourceAccessModalities:
            - protocol: http
              accessURL: rs
              type:
                - 'iudx:HTTPAccess'
            - protocol: amqps
              accessURL: databroker
              type:
                - 'iudx:StreamingAccess'
            - protocol: ftp
              accessURL: file
              type:
                - 'iudx:FileAccess'
          location:
            type: Place
            address: 'IISc, Bangalore'
            geometry:
              type: Point
              coordinates:
                - 77.570423
                - 13.013945
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:ResourceServer'
        name: Iudx ResourceServer
        description: Multi tenanted IUDX resource server
        tags:
          - IUDX
          - Resource
          - Server
          - Platform
        cos: 26d33603-c0bb-4ea0-85f8-4017020597ce
        owner: 37d33603-c0bb-4ea0-85f8-4017031686df
        resourceServerOrg:
          name: iudx
          additionalInfoURL: 'https://iudx.org.in'
          location:
            type: Place
            address: 'IISc, Bangalore'
            geometry:
              type: Point
              coordinates:
                - 77.570423
                - 13.013945
        resourceServerRegURL: example.iudx.io
        resourceAccessModalities:
          - protocol: http
            accessURL: rs
            type:
              - 'iudx:HTTPAccess'
          - protocol: amqps
            accessURL: databroker
            type:
              - 'iudx:StreamingAccess'
          - protocol: ftp
            accessURL: file
            type:
              - 'iudx:FileAccess'
        location:
          type: Place
          address: 'IISc, Bangalore'
          geometry:
            type: Point
            coordinates:
              - 77.570423
              - 13.013945
    exampleEntityProvider:
      type: object
      title: provider entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        resourceServer:
          type: string
          format: uuid
        description:
          type: string
        providerUserId:
          type: string
          format: uuid
        providerOrg:
          type: string
      required:
        - type
        - name
        - resourceServer
        - description
        - providerUserId
        - providerOrg
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:Provider'
        name: IudxProvider
        resourceServer: '{{UUID}}'
        description: provider id for uuid test
        providerUserId: UUID
        providerOrg:
          name: Datakaveri
          additionalInfoURL: 'https://datakaveri.org'
          location:
            type: Place
            address: IIsc
            geometry:
              type: Point
              coordinates:
                - 75.92
                - 14.5
    exampleEntityResourceGroup:
      type: object
      title: resource group entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        provider:
          type: string
          format: uuid
      required:
        - type
        - name
        - description
        - tags
        - provider
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:ResourceGroup'
          - 'iudx:IssueReporting'
        name: agra-swachhata-apps
        description: 'Civic Issues like open defecation, garbage dumping, etc., reported in Agra city via Swachhata app. Publishes all the complaints/issues lodged on the current day, on a daily basis.'
        tags:
          - swachhata
          - complaints
          - reporting
          - issue
          - garbage dump
          - debris removal
          - open defecation
          - construction material
          - requests
        provider: '{{UUID}}'
    exampleEntityResource:
      type: object
      title: resource entity
      description: An example entity without ID (For first time onboarding)
      properties:
        '@context':
          type: string
        type:
          type: array
          items:
            type: string
        name:
          type: string
        label:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        apdURL:
          type: string
        accessPolicy:
          type: string
        resourceServer:
          type: string
          format: uuid
        provider:
          type: string
          format: uuid
        resourceGroup:
          type: string
          format: uuid
      required:
        - type
        - name
        - label
        - description
        - tags
        - apdURL
        - accessPolicy
        - resourceServer
        - provider
        - resourceGroup
      example:
        '@context': 'https://voc.iudx.org.in/'
        type:
          - 'iudx:Resource'
          - 'iudx:PointOfInterest'
        name: wifi-location
        label: Wi-Fi Locations in Pimpri-Chinchwad City
        description: The physical coordinates of Wi-Fi system locations in Pimpri-Chinchwad city.
        tags:
          - Wi-Fi
          - Wi-Fi zone
          - hotspot
          - internet
          - Wi-Fi access
          - Wi-Fi location
          - wireless internet
          - internet access
        apdURL: rs.apd.iudx.org.in
        accessPolicy: SECURE
        resourceServer: '{{uuid}}'
        provider: '{uuid}}'
        resourceGroup: '{{uuid}}'
    unAuthorizedAccess:
      type: object
      title: Common to unauthorized access response
      description: Response for 401 invalid token
      properties:
        type:
          type: string
          description: |
            Indicates that the token sent in request header is invalid
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidAuthorizationToken'
        title: Token is invalid
        detail: 'failed to decode/validate jwt token : Invalid format for JWT'
    exampleInstance:
      type: object
      title: Root Type for exampleInstance
      description: An example instance object of middle layer.
      properties:
        name:
          type: string
          description: name of the instance
        cover:
          type: string
          description: URL of the image
        icon:
          type: string
          description: URL of the image
        logo:
          type: string
          description: URL of the image
      example:
        name: lucknow
        cover: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/covers/lucknow.jpg'
        icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/lucknow.jpg'
        logo: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/logo/lucknow.jpg'
    successResponseForCreatingInstance:
      type: object
      title: Response for creating an instance
      description: Example success response for creating the given instance
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Instance Created Successfully'
        results:
          - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
            detail: Instance created Successfully
    errorResponseForCreatingInstance:
      type: object
      title: Example Response for creating or updating an instance or a domain or a geoquery
      description: Invalid or missing payload field in the given request
      properties:
        type:
          type: string
          description: |
            Indicates Invalid or missing payload field in the given request
        title:
          description: A human readable title to the message response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidSchema'
        title: Invalid Schema
        detail: The Schema of requested body is invalid.
    successResponseForUpdatingInstance:
      type: object
      title: Response for updating an instance
      description: Example success response for updating the given instance
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Instance Updated Successfully'
        results:
          - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
            detail: Instance Updated Successfully
    successResponseForGettingInstance:
      type: object
      title: Response for getting an instance
      description: Example success response for getting instance
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 1
        detail: 'Instance fetched Successfully'
        results:
          - cover: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/covers/lucknow.jpeg'
            instanceId: 191e35e3-99c2-43a5-ba8d-811a756b08de
            name: lucknow
            icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/lucknow.jpeg'
            logo: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/logo/lucknow.jpeg'
    successResponseForDeletingInstance:
      type: object
      title: Response for deleting an instance
      description: Example success response for deleting instance
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Instance deleted Successfully'
        results:
          - id: 191e35e3-99c2-43a5-ba8d-811a756b08de
            detail: Instance deleted Successfully
    exampleDomain:
      type: object
      title: Root Type for exampleDomain
      description: An example domain object of middle layer.
      properties:
        description:
          type: string
          description: Description about the domain
        icon:
          type: string
          description: URL of the image
        label:
          type: string
          description: type or tag of the domain
        name:
          type: string
          description: Domain name
      example:
        description: Data Models that pertain to civic domain
        icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/civic.png'
        label: Civic
        name: civic
    successResponseForCreatingDomain:
      type: object
      title: Response for creating a domain
      description: Example success response for creating a domain
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'domain created successfully'
        results:
          - id: 3d73067f-2855-4155-b918-14d621b7a576
            detail: domain Created Successfully
    successResponseForUpdatingDomain:
      type: object
      title: Response for updating a domain
      description: Example success response for updating a domain
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Domain Updated Successfully'
        results:
          - id: 3d73067f-2855-4155-b918-14d621b7a576
            detail: Domain Updated Successfully
    successResponseForGettingDomain:
      type: object
      title: Response for getting a domain
      description: Example success response for getting a domain
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        totalHits:
          type: integer
          description: Total number of documents which matched the query.
          format: int32
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 2
        detail: 'Domain fetched Successfully'
        results:
          - icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/environment.png'
            name: environment
            description: Data Models that pertain to environment domain
            label: Environment
            domainId: 143db678-0816-4bb5-999d-b62ac0ca1b4b
          - icon: 'https://iudx-catalogue-assets.s3.ap-south-1.amazonaws.com/instances/icons/civic.jpeg'
            name: civic
            description: Data Models that pertain to civic domain
            label: Civic
            domainId: 3d73067f-2855-4155-b918-14d621b7a576
    successResponseForDeletingDomain:
      type: object
      title: Response for deleting a domain
      description: Example success response for deleting a domain
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        detail: 'Domain deleted Successfully'
        results:
          - id: 3d73067f-2855-4155-b918-14d621b7a576
            detail: Domain deleted Successfully
    invalidIdErrorResponse:
      type: object
      title: Invalid ID
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        title:
          type: string
          description: A human readable title to the message response.
        detail:
          type: string
          description: Detailed description of the type or response
      example:
        type: 'urn:dx:cat:InvalidUUID'
        title: Invalid syntax of uuid
        detail: The id is invalid
    successResponseCreateInstance:
      type: object
      title: Response for list with instance type
      description: Example response for list types
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        results:
          - id: Bengaluru
            method: insert
            title: 'urn:dx:cat:Success'
    errorResponseForCreateInstance:
      type: object
      title: Response for bad request
      description: Invalid id in query param
      properties:
        type:
          type: string
          description: |
            Indicates that the id sent in request is invalid
        title:
          description: A human readable title to the message response
        detail:
          type: string
          description: Detailed description of the type or response
      required:
        - type
      example:
        type: 'urn:dx:cat:InvalidSyntax'
        title: Invalid Syntax
        detail: id not present in the request
    successResponseForGetInstance:
      type: object
      title: Response for getting instance
      description: Example success response for getting DX Catalogue instances
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered.
        totalHits:
          type: integer <int32>
          description: Total number of documents which matched the query.
        title:
          description: A human readable title to the message response.
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        totalHits: 9
        results:
          - '10'
          - abcd
          - bengaluru
          - mumbai
          - poone
          - pune
          - stqc
          - surat
    successResponseForDeleteInstance:
      type: object
      title: Response for list with instance type
      description: Example response for list types
      properties:
        type:
          type: string
          description: |
            URN type of the response indicating if the query was successful or if any errors have
            been triggered
        title:
          type: string
          description: A human readable title to the message response
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:Success'
        title: Success
        results:
          - id: Bengaluru
            method: delete
            title: 'urn:dx:cat:Success'
    errorResponseForDeleteInstance:
      type: object
      title: Response for bad request
      description: Invalid item type in the given request
      properties:
        type:
          type: string
          description: |
            Indicates that the item type sent in request path param is invalid
        title:
          description: A human readable title to the message response
        results:
          type: array
          description: Results which matched the query. This is an array of objects.
          items:
            type: object
      required:
        - type
      example:
        type: 'urn:dx:cat:ItemNotFound'
        title: Item is not found
        results:
          - id: Abcd
            method: delete
            title: failed
            detail: 'Fail: Doc doesn''t exist, can''t delete'